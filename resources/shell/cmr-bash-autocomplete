# file: cmr-bash-autocomplete
# cmr (sub)command-completion

APPS='access-control bootstrap cubby dev-system index-set indexer ingest metadata-db search virtual-product'
LIBS='acl-lib collection-renderer-lib common-app-lib common-lib elastic-utils-lib es-spatial-plugin message-queue-lib oracle-lib orbits-lib spatial-lib transmit-lib umm-lib umm-spec-lib vdd-spatial-viz'
APPS_LIBS="$APPS $LIBS"

# Level 1
TOP_COMMANDS='build git install setup show start status stop test'
TOP_DASHED='-h -v --help --version'
TOP_LEVEL="$TOP_COMMANDS $TOP_DASHED"

# Level 2
TOP_HELP="$TOP_COMMANDS"
SETUP_LEVEL='local db dev help'
BUILD_LEVEL='docker help uberdocker uberjar uberjars'
INSTALL_LEVEL='all docs help jars jars,docs local orbits-gems oracle-libs'
SHOW_LEVEL='help log log-tail log-test log-tests'
START_LEVEL="all $APPS docker help local uberdocker uberjar"
STATUS_LEVEL="docker help uberdocker uberjar"
STOP_LEVEL="all $APPS docker help local uberdocker uberjar"
TEST_LEVEL='all deps help cicd lint versions'
GIT_LEVEL='branches help log-latest log-short log-graph tag'

# Level 3
SETUP_DB_LEVEL="create-users do-migrations help"
STAR_DOCKER_LEVEL="all $APPS help"
STAR_LOCAL_LEVEL='marvel sqs-sns help'
UBERJAR_LEVEL="$APPS"
LOG_LEVEL="$APPS"
UBERDOCKER_LEVEL="separate together"

_cmr () {
    local cur prev
    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}
    case ${COMP_CWORD} in
        1)
            case ${cur} in
                -*)
                    COMPREPLY=($(compgen -W "${TOP_DASHED}" -- $cur ))
                    ;;
                 *)
                    COMPREPLY=($(compgen -W "${TOP_LEVEL}" ${cur}))
                    ;;
            esac
            ;;
        2)
            case ${prev} in
                build)
                    COMPREPLY=($(compgen -W "${BUILD_LEVEL}" ${cur}))
                    ;;
                git)
                    COMPREPLY=($(compgen -W "${GIT_LEVEL}" ${cur}))
                    ;;
                help)
                    COMPREPLY=($(compgen -W "${TOP_HELP}" ${cur}))
                    ;;
                install)
                    COMPREPLY=($(compgen -W "${INSTALL_LEVEL}" ${cur}))
                    ;;
                setup)
                    COMPREPLY=($(compgen -W "${SETUP_LEVEL}" ${cur}))
                    ;;
                show)
                    COMPREPLY=($(compgen -W "${SHOW_LEVEL}" ${cur}))
                    ;;
                start)
                    COMPREPLY=($(compgen -W "${START_LEVEL}" ${cur}))
                    ;;
                status)
                    COMPREPLY=($(compgen -W "${STATUS_LEVEL}" ${cur}))
                    ;;
                stop)
                    COMPREPLY=($(compgen -W "${STOP_LEVEL}" ${cur}))
                    ;;
                test)
                    COMPREPLY=($(compgen -W "${TEST_LEVEL}" ${cur}))
                    ;;
            esac
            ;;
        3)
          case ${prev} in
                db)
                    COMPREPLY=($(compgen -W "${SETUP_DB_LEVEL}" ${cur}))
                    ;;
                deps-tree)
                    COMPREPLY=($(compgen -W "${APPS_LIBS}" ${cur}))
                    ;;
                docker)
                    COMPREPLY=($(compgen -W "${STAR_DOCKER_LEVEL}" ${cur}))
                    ;;
                lint)
                    COMPREPLY=($(compgen -W "${APPS_LIBS}" ${cur}))
                    ;;
                local)
                    COMPREPLY=($(compgen -W "${STAR_LOCAL_LEVEL}" ${cur}))
                    ;;
                log)
                    COMPREPLY=($(compgen -W "${LOG_LEVEL}" ${cur}))
                    ;;
                log-tail)
                    COMPREPLY=($(compgen -W "${LOG_LEVEL}" ${cur}))
                    ;;
                log-test)
                    COMPREPLY=($(compgen -W "${LOG_LEVEL}" ${cur}))
                    ;;
                uberdocker)
                    COMPREPLY=($(compgen -W "${UBERDOCKER_LEVEL}" ${cur}))
                    ;;
                uberjar)
                    COMPREPLY=($(compgen -W "${UBERJAR_LEVEL}" ${cur}))
                    ;;
                versions)
                    COMPREPLY=($(compgen -W "${APPS_LIBS}" ${cur}))
                    ;;
            esac
            ;;

        *)
            COMPREPLY=()
            ;;
    esac
    return 0
}

complete -F _cmr cmr
complete -F _cmr ./bin/cmr
#
